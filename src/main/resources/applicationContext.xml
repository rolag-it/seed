<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"      
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:sec="http://www.springframework.org/schema/security" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       					   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       					   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       					   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       					   http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
       					   http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    
    <!-- Activates scanning of @Autowired -->
    <context:annotation-config/>        

    <!-- Activates scanning of @Repository and @Service -->
    <context:component-scan base-package="it.tids.seed"/>
    
     <!-- Enable @Transactional support --> 
    <tx:annotation-driven/>    
    
    <!-- Enable @AspectJ support
    <aop:aspectj-autoproxy/> -->  
    
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
    	<constructor-arg ref="sessionFactory"/>
    </bean> 
    
    <!-- Hibernate SessionFactory -->
   <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=${hibernate.dialect}
                hibernate.query.substitutions=true 'Y', false 'N'
                hibernate.cache.use_second_level_cache=true
                hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
            </value>
            <!-- Turn batching off for better error messages under PostgreSQL -->
            <!-- hibernate.jdbc.batch_size=0 -->
        </property>
    </bean>       
      
     <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    	 <constructor-arg ref="sessionFactory"/> 
    </bean>  
    
    <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/seed"/>
    
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>        
    
    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"/> 
    
    <!-- Activates scanning of @Secured --> 
    <sec:global-method-security secured-annotations="enabled"/>
     
    <sec:authentication-manager>    	
        <sec:authentication-provider user-service-ref="userDetailsService">
            <sec:password-encoder ref="passwordEncoder"/>
        </sec:authentication-provider>
    </sec:authentication-manager>
   
    <sec:http auto-config="true" disable-url-rewriting="true" use-expressions="true"  >    
    	    
      	<sec:intercept-url pattern="/admin/*" access="hasRole('ROLE_ADMIN')"/>
      	<sec:intercept-url pattern="/eventi/*" access="hasRole('ROLE_USER')"/>
      	<sec:intercept-url pattern="/**/home.*" access="isAuthenticated()"/>      	  	
       	
        <sec:form-login login-processing-url="/j_security_check" login-page="/login.html" authentication-success-handler-ref="appAuthenticationSuccessHandler" authentication-failure-url="/login.html?error=true"/>
        <sec:logout logout-success-url="/" delete-cookies="JSESSIONID" invalidate-session="true"/>
        <sec:session-management  invalid-session-url="/timeout.html"/>       
    </sec:http>         
   
</beans>